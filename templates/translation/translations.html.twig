{% extends 'base.html.twig' %}

{% block body %}
    <div class="row">
        <div class="col-md-12">
            <h1>App translations</h1>
        </div>
    </div>

    {% include 'translation/_filter_form.html.twig' %}

    <div class="row">
        <div class="col-md-12">
            <table class="table"
                   data-path="{{ absolute_url(path('app_translation_list', {'domain': '__DOMAIN__', 'locale': '__LOCALE__'})) }}"
                   data-submit="{{ absolute_url(path('app_translation_add')) }}"
            >
                <thead>
                <tr>
                    <th>Translation keys</th>
                    <th>Messages ({{ defaultLocale }})</th>
                    <th>Messages ({{ selectedLocale }})</th>
                </tr>
                </thead>
                <tbody>
                {% for key, message in messages %}
                    <tr>
                        <td>
                            <code>
                                {{ key }}
                            </code>
                        </td>
                        <td>{{ message }}</td>
                        <td>
                            {% set inputVal = '' %}
                            {% if translatedMessages[key] is defined %}
                                {% set inputVal = translatedMessages[key] %}
                            {% endif %}
                            <input class="form-control"
                                   type="text"
                                   value="{{ inputVal }}"
                                   placeholder="Translation in {{ selectedLocale }}"
                                   name="translation"
                            >
                            <input type="hidden" name="key" value="{{ key }}">
                            <div class="alert alert-success mt-2 mb-0 p-2 d-none" role="alert">
                                Translation saved !
                            </div>
                            <div class="alert alert-danger mt-2 mb-0 p-2 d-none" role="alert">
                                An error occured !
                            </div>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

            <input type="hidden" name="domain" value="{{ selectedDomain }}">
            <input type="hidden" name="locale" value="{{ selectedLocale }}">
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const domainSelect = document.querySelector('select[name="domain"]');
            const localeSelect = document.querySelector('select[name="locale"]');

            domainSelect.addEventListener('change', () => {
                submitChange(domainSelect.value, localeSelect.value);
            });

            localeSelect.addEventListener('change', () => {
                submitChange(domainSelect.value, localeSelect.value);
            });

            const translationInputs = document.querySelectorAll('input[name="translation"]');
            const domainInput = document.querySelector('input[name="domain"]');
            const localeInput = document.querySelector('input[name="locale"]');

            translationInputs.forEach((translationInput) => {
                translationInput.addEventListener('blur', () => {
                    const cell = translationInput.parentNode;
                    const keyInput = cell.querySelector('input[name="key"]');

                    let formData = new FormData();

                    formData.append(translationInput.name, translationInput.value);
                    formData.append(domainInput.name, domainInput.value);
                    formData.append(localeInput.name, localeInput.value);
                    formData.append(keyInput.name, keyInput.value);

                    fetch(document.querySelector('table').dataset.submit, {
                        method: 'POST',
                        body: formData
                    }).then((response) => {
                        return response.json();
                    }).then((data) => {
                        let alertBox = cell.querySelector('.alert-danger');

                        if (data.success) {
                            alertBox = cell.querySelector('.alert-success');
                        }

                        showAlert(alertBox);
                    });
                })
            });
        });

        function submitChange(domain, locale) {
            window.location.href = document.querySelector('table').dataset.path.replace('__DOMAIN__', domain).replace('__LOCALE__', locale);
        }

        function showAlert(alert) {
            alert.classList.remove('d-none');
            setTimeout(() => {
                alert.classList.add('d-none');
            }, 1000);
        }
    </script>
{% endblock %}